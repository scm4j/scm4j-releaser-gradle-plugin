plugins {
	id 'java'
	id 'maven'
	id 'eclipse'
	id 'idea'
	id 'jacoco'
	id 'com.github.kt3k.coveralls' version '2.8.1'
	id 'java-gradle-plugin'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'org.scm4j'
version = file('version').text.trim()

repositories {
	jcenter()
}

dependencies {
	testCompile 'junit:junit:4.12'
	testCompile 'org.hamcrest:hamcrest-all:1.3'
}

configurations.all {
	resolutionStrategy {
		cacheDynamicVersionsFor 0, 'seconds'
		cacheChangingModulesFor 0, 'seconds'
	}
}

jacocoTestReport {
	reports {
		xml.enabled = true // coveralls plugin depends on xml format report
		html.enabled = true
	}
}

jar {
	manifest.attributes (
		'Specification-Title': project.name,
		'Specification-Version': version.replaceAll(/-SNAPSHOT$/, ''),
		'Implementation-Title': project.name,
		'Implementation-Version': "$version (${new Date().format('yyyy-MM-dd')})",
	)
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

test.testLogging.exceptionFormat 'full'

test {
	useJUnit {
		excludeCategories 'org.scm4j.releaser.gradle.IntegrationTest'
	}
}

gradlePlugin {
	plugins {
		ReleaserGradlePlugin {
			id = 'org.scm4j.releaser.scm4j-releaser-gradle-plugin'
			implementationClass = 'org.scm4j.releaser.gradle.ReleaserGradlePlugin'
		}
	}
}
